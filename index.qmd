<style>
.quarto-title-block {
  display: none;
}
.quarto-title {
  display: none;
}
</style>

![](logo.gif){width=300px fig-align="center"}

# Quick Start

Welcome to the FLIM Playground ðŸ¥³ðŸŽ‰ðŸ¥‚! To quickly try out different analysis methods, read [How to config](data_analysis_config.qmd) and try the [online demo](flim-playground.streamlit.app/) that allows you to upload your own data. It can also extract features from  FLIM raw data (not available in the demo). Read on to learn more about the system.

# Introduction

Fluorescence lifetime imaging microscopy (FLIM) measures the time it takes for a fluorescent molecule from being excited by a pulse of light (entering excited state) to emitting light (returning to the ground state). It is sensitive to changes in fluorophore microenvironment including conformational changes with protein binding and the presence of quenchers. Coupled with modern automated cell-segmentation methods [@stringer2021], FLIM enables single-cell analyses that reveal biological heterogeneity.

::: {.callout-note collapse="true"}
# Instrumentation

To acquire FLIM data, a light sourceâ€”typically a pulsed laser for time-domain methods or a modulated continuous-wave source for frequency-domain methodsâ€”is used to excite the fluorophore. The emission is detected using instrumentation capable of resolving fluorescence decay, such as time-correlated single-photon counting (TCSPC), time-gated detectors, or phase/modulation-based detection. In time-domain FLIM, the delay between excitation and photon arrival is measured, and often a histogram is built, with x-axis being the delay time and y-axis being the number of photons falling into each time bin. Similar to film (e.g. 24 frames per second) versus photo, FLIM has an additional dimension of time (e.g. 256 time bins per 12.5 nanoseconds) compared to intensity images. 

In frequency-domain FLIM, the phase shift and modulation depth of the emission relative to the excitation are determined. 
:::

Due to the [heterigenity](#heterogeneity) arised from the [multi-level](#levels-of-data) and [multi-stage](#stages-of-workflow) landscape of the FLIM workflow, researchers often rely on a patchwork of ad hoc scripts and specialized software. However, switching between methods or transitioning between stages usually requires coding expertise, introduces errors, and slows discovery. 

**FLIM Playground** removes these hurdles with an interactive code free graphical user interface (GUI) that spans the full pipeline. It integrates validation checks that guide users at every step, and built-in repertoire of analytical methods with interactive widgets that encourage hypothesis driven, iterative exploration of large datasets. A modular architecture also enables incorporation of new algorithms as tools evolve.



::: {.callout-important collapse="true"}
# Input Scope of FLIM Playground
It currently supports TCSPC-based FLIM only. It can also be extended to support other time-domain acquisition methods such as the Gating method. 
:::

# Heterogeneity
INSERT FIGURE HERE (FIGURE 1)

The flexibility of the FLIM workflow allows researchers to acquire data in different formats and extract data and insights using different methods, but it also introduces heterogeneity and fragmentation, 

## Levels of Data
At each level (bullets), heterogeneity stems from the diverse input types (sub-bullets).

- <span style="color: #1f77b4;">**Pixel**</span>
- <span style="color: #ff7f0e;">**Region of Interest (ROI)**</span>
  - Whole cell mask
  - Cytoplasm mask
  - Nucleus mask
  - Stain mask
- <span style="color: #2ca02c;">**Channel**</span>
  - Different fluorophores
  - Different calibration files
  - Different ROI masks
- <span style="color: #d62728;">**Field of View (FOV)**</span>
  - different file formats from different vendors (e.g. `.sdt`, `.ptu`)
  - different dimensions (e.g. `XYT`, `CXYT`)
- <span style="color: #9467bd;">**Experiment**</span>
  - different treatment, different time points, different conditions, etc.


## Stages of Workflow
At each stage (bullets), heterogeneity stems from the different methods (sub-bullets) and the different levels of data to focus on (in matching color swatches). 

- [Metadata organization](fov_metadata.qmd): <span style="color: #2ca02c;">â– </span> <span style="color: #d62728;">â– </span> 
- [Numerical Feature Extraction](numerical_feature_extraction.qmd)
  - Calibration: <span style="color: #ff7f0e;">â– </span> <span style="color: #2ca02c;">â– </span> <span style="color: #d62728;">â– </span> 
    - [Time-domain](numerical_feature_extraction.qmd#irf-shift-calibration)
    - [Frequency-domain](numerical_feature_extraction.qmd#reference-dye-calibration)
  - Lifetime extraction:<span style="color: #ff7f0e;">â– </span> <span style="color: #2ca02c;">â– </span> <span style="color: #d62728;">â– </span> 
    - [Fitting](lifetime_fit.qmd)
    - [Phasor](lifetime_fit_free.qmd)
  - Intensity-based feature extraction: <span style="color: #1f77b4;">â– </span> <span style="color: #ff7f0e;">â– </span> <span style="color: #2ca02c;">â– </span> <span style="color: #d62728;">â– </span> 
    - [Morphology](intensity_morphology.qmd)
    - [Texture](intensity_texture.qmd)
- [Categorical feature extraction](categorical_feature_extraction.qmd): <span style="color: #ff7f0e;">â– </span> <span style="color: #9467bd;">â– </span> 
- [Data Analysis](data_analysis.qmd) (Visualization + Statistical Modeling): <span style="color: #ff7f0e;">â– </span> <span style="color: #d62728;">â– </span>  <span style="color: #9467bd;">â– </span>
  - [Univariate analysis](data_analysis.qmd#univariate-analysis)
  - [Bivariate analysis](data_analysis.qmd#bivariate-analysis)
  - [Multivariate analysis](data_analysis.qmd#multivariate-analysis)

# Solution
FLIM Playground can be divided into two independent sections:

- [Data Extraction](data_extraction.qmd) that extracts features from the raw data
- [Data Analysis](data_analysis.qmd) that analyzes the extracted features from the Data Extraction section or uses your own data using visualizations and statistical modeling.

Data Extraction addresses the heterogeneity in data types and extraction methods by adopting a channel-centric [framework](data_extraction.qmd#channel-centric-framework) that offers flexibility without incurring too much overhead for the user. The framework is enforced by the [data extraction configuration](data_extraction_config.qmd) module.

Data Analysis addresses the heterogeneity in analysis methods and level to focus on by adopting a [design](data_analysis.qmd#design) that allows all analysis methods to share the same interactive and frictionless exploration experience. 
The design is enforced by the [data analysis configuration](data_analysis_config.qmd) module if the user wants to use their own data, otherwise the design requirements are automatically met. 

INSERT FIGURE HERE (FIGURE 2)

## Deployment

The system is built entirely in Python and is open-source. It can be installed by downloading the desktop app from [GitHub](https://github.com/skalalab/flim_playground) or by cloning the repository and building it yourself.
